{"version":3,"sources":["../../models/account.js"],"names":["Schema","Account","username","String","password","created","type","Date","default","now","methods","generateHash","hashSync","validateHash","compareSync","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,UAAU,IAAID,MAAJ,CAAW;AACvBE,cAAUC,MADa;AAEvBC,cAAUD,MAFa;AAGvBE,aAAS,EAAEC,MAAMC,IAAR,EAAcC,SAASD,KAAKE,GAA5B;AAHc,CAAX,CAAhB;;AAMA;AACAR,QAAQS,OAAR,CAAgBC,YAAhB,GAA+B,UAASP,QAAT,EAAmB;AAC9C,WAAO,mBAAOQ,QAAP,CAAgBR,QAAhB,EAA0B,CAA1B,CAAP;AACH,CAFD;;AAIA;AACAH,QAAQS,OAAR,CAAgBG,YAAhB,GAA+B,UAAST,QAAT,EAAmB;AAC9C,WAAO,mBAAOU,WAAP,CAAmBV,QAAnB,EAA6B,KAAKA,QAAlC,CAAP;AACH,CAFD;;kBAIe,mBAASW,KAAT,CAAe,SAAf,EAA0Bd,OAA1B,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcryptjs';\n\nconst Schema = mongoose.Schema;\n\nconst Account = new Schema({\n    username: String,\n    password: String,\n    created: { type: Date, default: Date.now }\n});\n\n// generates hash\nAccount.methods.generateHash = function(password) {\n    return bcrypt.hashSync(password, 8);\n};\n\n// compares the password\nAccount.methods.validateHash = function(password) {\n    return bcrypt.compareSync(password, this.password);\n};\n\nexport default mongoose.model('account', Account);"]}